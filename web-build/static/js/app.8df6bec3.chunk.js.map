{"version":3,"sources":["src/config/prices.ts","src/Components/ListItems/ListItemIncredience.tsx","src/Components/Lists/ListIncredinences.tsx","src/Controllers/PriceController.ts","src/Components/Lists/ListPizzas.tsx","src/Components/Buttons/ButtonClosePizza.tsx","src/Components/Buttons/ButtonCloseOrder.tsx","src/Components/Inputs/InputIncrediences.tsx","src/Components/Inputs/InputDough.tsx","src/Components/Inputs/InputSize.tsx","src/Components/Inputs/InputType.tsx","src/Components/Inputs/InputDrinks.tsx","src/App.tsx","App.ts"],"names":["drinks","name","price","typeNames","typePrices","0","1","2","3","4","5","6","7","8","sizeNames","sizePrizes","doughNames","doughPrices","namesIngredients","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","pricesIngredients","IncredienceItem","incredience","IncrediencesList","pizza","incrediences","map","index","key","formatPrice","toFixed","ListPizzas","order","foods","drink","type","total","ButtonClosePizza","closePizza","useState","onClick","e","preventDefault","ButtonCloseOrder","closeOrder","InputIncrediences","changeIncrediences","value","onChange","target","InputDough","changeDough","handleChange","checked","dough","InputSize","changeSize","size","InputType","changeType","InputDrinks","addDrinkToOrder","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","App","plainPizza","plainOrder","setIncrediences","orderHistory","setOrderHistory","useEffect","console","log","setOrder","calcOrderPrice","setPizza","calcPizzaPrice","prevState","forEach","i","View","style","Text","doughInput","a","async","parseInt","sizeInput","typeInput","incrediencesInput","replace","split","Number","newPizzas","drinkId","newOrder"],"mappings":"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","file":"static/js/app.8df6bec3.chunk.js","sourcesContent":["const drinks = [\n  {\n    name: 'Cola (1,60€)',\n    price: 1.6\n  },\n  {\n    name: 'Beer (2,00€)',\n    price: 2\n  },\n  {\n    name: 'Getränk (1,40€)',\n    price: 1.4\n  },\n  {\n    name: 'Getränk (1,50€)',\n    price: 1.5\n  }\n\n]\n\n\n\n// Prices of the proven compounds (bewaehrte Verbindung)\nconst pricesCompounds = {\n  0: 0,\n  1: 1.7,\n  2: 2.4,\n  3: 2.5,\n  4: 2.1,\n  5: 2.9,\n  6: 3.6,\n  7: 1.6,\n  8: 0.6 \n};\n\ninterface NamesTypes {\n  [k: number]: string\n}\nconst typeNames:NamesTypes = {\n  0: 'Base',\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '5',\n  6: '6',\n  7: 'Super Surprise',\n  8: 'Schokopizza',\n}\ninterface PricesTypes {\n  [k: number]: number\n}\nconst typePrices:PricesTypes = {\n  0: 0,\n  1: 1.7,\n  2: 2.4,\n  3: 2.5,\n  4: 2.1,\n  5: 2.9,\n  6: 3.6,\n  7: 1.6,\n  8: 0.6 \n}\n\n// Ingrediends of proven compounds to check for missing ones\nconst ingredientsCompounds = {\n  1: [1, 12, 8, 20],\n  2: [16, 18, 23, 20],\n  3: [25, 9, 4, 13, 14],\n  4: [22, 15, 12, 7],\n  5: [26, 5, 3, 28, 22],\n  6: [32, 2, 14, 24]\n};\n// Prices for pizza variations\ninterface SizeNames {\n  [k: string]: string\n}\nconst sizeNames:SizeNames = {\n  1: 'small',\n  2: 'medium',\n  3: 'large'\n}\ninterface SizePrizes {\n  [k: string]: number\n}\nconst sizePrizes:SizePrizes = {\n  1: 2.9,\n  2: 4.9,\n  3: 6.9\n}\n\ninterface NamesDough {\n  [k: string]: string\n}\nconst doughNames:NamesDough = {\n  1: 'wheat',\n  2: 'glutenfree',\n  3: 'spelt'\n}\ninterface PricesDough {\n  [k: string]: number\n}\nconst doughPrices:PricesDough = {\n  1: 0,\n  2: 3,\n  3: 0.5\n}\nconst prices = {\n  // base prices\n  size_normal: 4.9,\n  size_smaller: 2.9,\n  size_larger: 6.9,\n  // prices added to base\n  dough_dinkel: 0.5,\n  dough_glutenfree: 3.0,\n  type_chocolate: 0.6,\n  type_surprise: 1.6\n};\ninterface NamesIngredients {\n  [k: string]: string\n}\nconst namesIngredients:NamesIngredients = {\n  1: 'Garlic',\n  2: 'Zucchini',\n  3: 'Onion',\n  4: 'Chickpeas',\n  5: 'Sunflower Seeds',\n  6: 'Mushroom',\n  7: 'Bell Pepper',\n  8: 'Spinach',\n  9: 'Sesame Seeds',\n\n  10: 'Pineapple',\n  11: 'Broccoli',\n  12: 'Cherry Tomatoes',\n  13: 'Pumpkin Seeds',\n  14: 'Caramelized Onions',\n  15: 'Eggplant',\n  16: 'Banana',\n  17: 'Sweet Potato',\n  \n  18: 'Fresh Basil',\n  19: 'Caper',\n  20: 'Pepperoni',\n  21: 'Tahini',\n  \n  22: 'Ruccola',\n  23: 'Peanut Butter',\n  24: 'Cashew',\n  25: 'Avocado',\n  26: 'Smoked Tofu',\n  27: 'Chia Seeds',\n  28: 'Dried Figs',\n  29: 'Walnuts',\n\n  30: 'Black Olives',\n  31: 'Hemp Seeds',\n  32: 'Green Olives',\n  33: 'Vegan Salami',\n  34: 'Artichoke',\n  35: 'Dried Tomatoes',\n  36: 'Tempeh',\n  37: 'Pesto',\n  38: 'Seitan Gyros',\n};\n\ninterface Incredience {\n  [k: string]: number\n}\nconst pricesIngredients:Incredience = {\n  1: 0.4,\n  2: 0.4,\n  3: 0.4,\n  4: 0.4,\n  5: 0.4,\n  6: 0.4,\n  7: 0.4,\n  8: 0.4,\n  9: 0.4,\n\n  10: 0.5,\n  11: 0.5,\n  12: 0.5,\n  13: 0.5,\n  14: 0.5,\n  15: 0.5,\n  16: 0.5,\n  17: 0.5,\n\n  18: 0.6,\n  19: 0.6,\n  20: 0.6,\n  21: 0.6,\n\n  22: 0.7,\n  23: 0.7,\n  24: 0.7,\n  25: 0.7,\n  26: 0.7,\n  27: 0.7,\n  28: 0.7,\n  29: 0.7,\n\n  30: 1.0,\n  31: 1.0,\n  32: 1.0,\n  33: 1.0,\n  34: 1.5,\n  35: 1.5,\n  36: 1.5,\n  37: 1.5,\n  38: 1.5,\n};\nexport {pricesIngredients,namesIngredients, doughPrices, doughNames, sizeNames,sizePrizes,typeNames,typePrices, drinks};","import React from \"react\";\nimport {pricesIngredients,namesIngredients} from \"../../config/prices\";\n\ninterface TodoListItemProps {\n  incredience:Incredience\n}\nexport const IncredienceItem: React.FC<TodoListItemProps> = ({ incredience }) => {\n  return (\n    <li>\n      { namesIngredients[incredience] } ({ pricesIngredients[incredience] } €)\n    </li>\n  );\n};\n","import React from \"react\";\n//import { Todo, ToggleComplete } from \"./types\";\nimport { IncredienceItem } from \"../ListItems/ListItemIncredience\";\n\n\ninterface IncrediencesListProps {\n  pizza:Pizza\n}\n\nconst IncrediencesList: React.FC<IncrediencesListProps> = ({pizza}) => {\n  return (\n    <ul>\n    {pizza.incrediences.map((incredience, index) => (\n        <IncredienceItem key={index} incredience={incredience} />\n    ))}\n  </ul>\n  );\n};\nexport default IncrediencesList;","const formatPrice = (price:number):string=>{\n  return price.toFixed(2)+'€';\n}\nexport {formatPrice}","import React from \"react\";\nimport {drinks} from \"../../config/prices\";\n\nimport {formatPrice} from \"../../Controllers/PriceController\";\n\ninterface IncrediencesListProps {\n  order:Order\n}\n\nconst ListPizzas: React.FC<IncrediencesListProps> = ({order}) => {\n  return (\n    <div>\n      <ul>\n      {order.foods.map((pizza, index) => (\n          <li key={index}>Pizza {formatPrice(pizza.price)}</li>\n      ))}\n      </ul>\n      <ul>\n        {order.drinks.map((drink, index) => (\n          <li key={index}>{drinks[drink.type].name} {formatPrice(drink.price)}</li>\n        ))}\n      </ul>\n        <p>Total: {formatPrice(order.total)}</p>\n    </div>\n  );\n};\nexport default ListPizzas;","\nimport React, { useState, ChangeEvent, FormEvent } from \"react\";\n\ninterface ClosePizzaButtonProps {\n  closePizza: AddTodo;\n}\n\nexport const ButtonClosePizza: React.FC<ClosePizzaButtonProps> = ({ closePizza }) => {\n  const [newTodo, setNewTodo] = useState<string>(\"\");\n\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    closePizza();\n  };\n\n  return (\n    <button type=\"submit\" onClick={handleSubmit}>Click</button>\n  );\n};","\nimport React, { useState, ChangeEvent, FormEvent } from \"react\";\n\ninterface CloseOrderButtonProps {\n  closeOrder: AddTodo;\n}\n\nexport const ButtonCloseOrder: React.FC<CloseOrderButtonProps> = ({ closeOrder }) => {\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    closeOrder();\n  };\n\n  return (\n    <button type=\"submit\" onClick={handleSubmit}>Close Order</button>\n  );\n};","import React, { useState, ChangeEvent, FormEvent } from \"react\";\n\ninterface InputFieldProps {\n  incrediences: string,\n  changeIncrediences:ChangeIncrediences;\n}\n\nexport const InputIncrediences: React.FC<InputFieldProps> = ({ incrediences,changeIncrediences }) => {\n\n  //const [incrediences, setIncrediences] = useState<string>(\"\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    //setIncrediences(e.target.value);\n    changeIncrediences(e.target.value);\n  };\n\n  return (\n    <input type=\"text\" value={incrediences} onChange={handleChange} />\n  );\n};\n\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport {doughNames,doughPrices} from \"../../config/prices\";\n\ninterface InputDoughtProps {\n  pizza: Pizza,\n  changeDough: ChangeDough\n}\n\nexport const InputDough: React.FC<InputDoughtProps> = ({ pizza,changeDough }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    //setIncrediences(e.target.value);\n    changeDough(e.target.value);\n  };\n\n  return (\n    <div>\n    <form>\n      <input type=\"radio\" value=\"1\" name=\"dough\" checked={pizza.dough === 1} onChange={handleChange} /> {doughNames[1]}\n      <input type=\"radio\" value=\"2\" name=\"dough\" checked={pizza.dough === 2} onChange={handleChange} /> {doughNames[2]}\n      <input type=\"radio\" value=\"3\" name=\"dough\" checked={pizza.dough === 3} onChange={handleChange} /> {doughNames[3]}\n    </form>\n  </div>\n  );\n};","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport {sizeNames, sizePrizes} from \"../../config/prices\";\n\ninterface InputSizetProps {\n  pizza: Pizza,\n  changeSize: ChangeSize\n}\n\nexport const InputSize: React.FC<InputSizetProps> = ({ pizza,changeSize }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    //setIncrediences(e.target.value);\n    changeSize(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <input type=\"radio\" value=\"2\" name=\"size\" checked={pizza.size === 2} onChange={handleChange} /> {sizeNames[2]}\n        <input type=\"radio\" value=\"1\" name=\"size\" checked={pizza.size === 1} onChange={handleChange} /> {sizeNames[1]}\n        <input type=\"radio\" value=\"3\" name=\"size\" checked={pizza.size === 3} onChange={handleChange} /> {sizeNames[3]}\n      </form>\n    </div>\n  );\n};","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport {typeNames, typePrices} from \"../../config/prices\";\n\ninterface InputTypeProps {\n  pizza: Pizza,\n  changeType: ChangeType\n}\n\nexport const InputType: React.FC<InputTypeProps> = ({ pizza,changeType }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    changeType(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <input type=\"radio\" value=\"0\" name=\"type\" checked={pizza.type === 0} onChange={handleChange} /> {typeNames[0]} \n        <input type=\"radio\" value=\"1\" name=\"type\" checked={pizza.type === 1} onChange={handleChange} /> {typeNames[1]}\n        <input type=\"radio\" value=\"2\" name=\"type\" checked={pizza.type === 2} onChange={handleChange} /> {typeNames[2]} \n        <input type=\"radio\" value=\"3\" name=\"type\" checked={pizza.type === 3} onChange={handleChange} /> {typeNames[3]}\n        <input type=\"radio\" value=\"4\" name=\"type\" checked={pizza.type === 4} onChange={handleChange} /> {typeNames[4]}\n        <input type=\"radio\" value=\"5\" name=\"type\" checked={pizza.type === 5} onChange={handleChange} /> {typeNames[5]}\n        <input type=\"radio\" value=\"6\" name=\"type\" checked={pizza.type === 6} onChange={handleChange} /> {typeNames[6]}\n        <input type=\"radio\" value=\"7\" name=\"type\" checked={pizza.type === 7} onChange={handleChange} /> {typeNames[7]}\n        <input type=\"radio\" value=\"8\" name=\"type\" checked={pizza.type === 8} onChange={handleChange} /> {typeNames[8]}\n      </form>\n    </div>\n  );\n};","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport {drinks} from \"../../config/prices\";\n\ninterface InputDrinksProps {\n  addDrinkToOrder: AddDrinkToOrder;\n}\n\nexport const InputDrinks: React.FC<InputDrinksProps> = ({addDrinkToOrder}) => {\n  \n  const handleClick = (i:number) => {\n    addDrinkToOrder(i);\n  };\n  \n\n  return (\n    <div>\n      {drinks.map((drink,index) => (\n        <button key={index} onClick={() => handleClick(index)} value={index}>{drink.name}</button>\n      ))}\n    </div>\n  );\n};","import { StatusBar } from 'expo-status-bar';\nimport React, { useState,useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport ListIncrediences  from \"./Components/Lists/ListIncredinences\";\nimport ListPizzas  from \"./Components/Lists/ListPizzas\";\n\nimport {ButtonClosePizza} from \"./Components/Buttons/ButtonClosePizza\";\nimport {ButtonCloseOrder} from \"./Components/Buttons/ButtonCloseOrder\";\n\nimport {InputIncrediences} from \"./Components/Inputs/InputIncrediences\";\nimport {InputDough} from \"./Components/Inputs/InputDough\";\nimport {InputSize} from \"./Components/Inputs/InputSize\";\nimport {InputType} from \"./Components/Inputs/InputType\";\nimport {InputDrinks} from \"./Components/Inputs/InputDrinks\";\n\nimport {formatPrice} from \"./Controllers/PriceController\";\nimport {pricesIngredients,sizePrizes,doughPrices,typePrices,drinks} from \"./config/prices\";\n\n\nexport default function App() {\n  //VARIABLES\n  const plainPizza: Pizza = {dough:1,size:2,type:0,incrediences:[],price:0}\n  const plainOrder: Order = {foods:[],drinks:[],total:0}\n  \n  //STORE\n  const [incrediences, setIncrediences] = useState<string>(\"\");\n  const [orderHistory, setOrderHistory] = useState<OrderHistory>([]);\n  useEffect(() => {\n    console.log(orderHistory);\n  }, [orderHistory]);\n\n  const [order, setOrder] = useState<Order>(plainOrder);\n  useEffect(() => {\n    calcOrderPrice();\n  }, [order.foods,order.drinks]);\n\n  const [pizza, setPizza] = useState<Pizza>(plainPizza);\n  useEffect(() => {\n    calcPizzaPrice();\n  }, [pizza.incrediences,pizza.size,pizza.dough,pizza.type]);\n\n  //FUNCTIONS\n  const changeSize:ChangeSize=async(sizeInput)=>{\n    setPizza(prevState => ({ ...prevState, size:parseInt(sizeInput)}));\n  }\n  const changeType:ChangeSize=async(typeInput)=>{\n    setPizza(prevState => ({ ...prevState, type:parseInt(typeInput)}));\n  }\n  const changeDough:ChangeSize=async(doughInput)=>{\n    setPizza(prevState => ({ ...prevState, dough:parseInt(doughInput)}));\n  }\n  const changeIncrediences:ChangeIncrediences=async(incrediencesInput)=>{\n    setIncrediences(incrediencesInput);\n    let incrediences:Array<Incredience> = incrediencesInput.replace(/,+$/,'').split(\",\").map(Number);\n    setPizza(prevState => ({ ...prevState, incrediences:incrediences}));\n  } \n  const addDrinkToOrder = (drinkId:number):void=>{\n    const newOrder:Array<Drink> = [...order.drinks,{type:drinkId,price:drinks[drinkId].price}];\n    setOrder(prevState => ({ ...prevState, drinks:newOrder}));\n  }\n  const calcOrderPrice = ():void=>{\n    let total = 0;\n    order.drinks.map((drink)=>(\n      total+=drink.price\n    ))\n    order.foods.map((pizza)=>(\n      total+=pizza.price\n    ))\n    setOrder(prevState => ({ ...prevState, total:total}));\n  }\n  const calcPizzaPrice = ():void=>{\n    let total = sizePrizes[pizza.size] + doughPrices[pizza.dough]+typePrices[pizza.type];\n    pizza.incrediences.forEach(i=>{\n      if(pricesIngredients[i]){\n        total += pricesIngredients[i];\n      }\n    });    \n    setPizza(prevState => ({ ...prevState, price:total}));\n  }\n  const closePizza = ():void=>{\n    const newPizzas:Array<Pizza> = [...order.foods,pizza];\n    setOrder(prevState => ({ ...prevState, foods:newPizzas}));\n    setPizza(plainPizza);\n    setIncrediences(\"\");\n  }\n  const closeOrder = ():void=>{\n    setOrderHistory([...orderHistory,order]);\n    setOrder(plainOrder);\n    setPizza(plainPizza);\n    setIncrediences(\"\");\n  }\n  return (\n    <View style={styles.container}>\n      <Text>PizzaLabCalc</Text>\n      <InputDough changeDough={changeDough} pizza={pizza} />\n      <InputSize changeSize={changeSize} pizza={pizza} />\n      <InputType changeType={changeType} pizza={pizza} />\n      <ListIncrediences pizza={pizza} />\n      <Text>Total: {formatPrice(pizza.price)}</Text>\n\n      <InputIncrediences incrediences={incrediences} changeIncrediences={changeIncrediences}/>\n      <ButtonClosePizza closePizza={closePizza}/>\n      <hr />\n      <ListPizzas order={order} />\n      <InputDrinks addDrinkToOrder={addDrinkToOrder} />\n      <ButtonCloseOrder closeOrder={closeOrder}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import App from \"./src/App\";\nexport default App;"],"sourceRoot":""}