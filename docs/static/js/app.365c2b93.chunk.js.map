{"version":3,"sources":["src/config/prices.ts","src/Components/ListItems/ListItemIncredience.tsx","src/Components/Lists/ListIncredinences.tsx","src/Controllers/PriceController.ts","src/Components/Lists/ListPizzas.tsx","src/Components/Lists/ListOrderHistory.tsx","src/Components/Buttons/ButtonClosePizza.tsx","src/Components/Buttons/ButtonCloseOrder.tsx","src/Components/Inputs/InputIncrediences.tsx","src/Components/Inputs/InputDough.tsx","src/Components/Inputs/InputSize.tsx","src/Components/Inputs/InputType.tsx","src/Components/Inputs/InputDrinks.tsx","src/App.tsx","App.ts","webpack:////Users/mart/Documents/Job/_SBX/[rea] pizzalab ordersystem/workspace/src/assets/css/App.css?7057","src/assets/css/App.css","src/assets/img/logo.png"],"names":["drinks","name","price","typeNames","typePrices","0","1","2","3","4","5","6","7","8","sizeNames","sizePrizes","doughNames","doughPrices","namesIngredients","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","pricesIngredients","IncredienceItem","incredience","IncrediencesList","pizza","incrediences","map","index","key","formatPrice","toFixed","ListPizzas","order","foods","drink","type","total","orderHistory","className","calculateOrderTotal","ButtonClosePizza","closePizza","useState","Button","onClick","e","preventDefault","ButtonCloseOrder","closeOrder","InputIncrediences","changeIncrediences","value","onChange","target","InputDough","changeDough","handleChange","ToggleButtonGroup","defaultValue","ToggleButton","InputSize","changeSize","InputType","changeType","InputDrinks","addDrinkToOrder","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","App","plainPizza","dough","size","plainOrder","setIncrediences","setOrderHistory","setOrder","useEffect","calcOrderPrice","setPizza","calcPizzaPrice","prevState","forEach","i","src","require","doughInput","a","async","parseInt","sizeInput","typeInput","incrediencesInput","replace","split","Number","Text","newPizzas","drinkId","newOrder","ListOrderHistory","api","content","__esModule","default","module","options","exports","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"static/js/app.365c2b93.chunk.js","sourcesContent":["const drinks = [\n  {\n    name: 'Getränk (1,00€)',\n    price: 1\n  },\n  {\n    name: 'Getränk (1,40€)',\n    price: 1.4\n  },\n  {\n    name: 'Getränk (1,50€)',\n    price: 1.5\n  },\n  {\n    name: 'Getränk (1,60€)',\n    price: 1.6\n  },\n  {\n    name: 'Getränk (2,00€)',\n    price: 2\n  },\n]\n\n\n\n// Prices of the proven compounds (bewaehrte Verbindung)\nconst pricesCompounds = {\n  0: 0,\n  1: 1.7,\n  2: 2.4,\n  3: 2.5,\n  4: 2.1,\n  5: 2.9,\n  6: 3.6,\n  7: 1.6,\n  8: 0.6 \n};\n\ninterface NamesTypes {\n  [k: number]: string\n}\nconst typeNames:NamesTypes = {\n  0: 'Base',\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '5',\n  6: '6',\n  7: 'Super Surprise',\n  8: 'Schokopizza',\n}\ninterface PricesTypes {\n  [k: number]: number\n}\nconst typePrices:PricesTypes = {\n  0: 0,\n  1: 1.7,\n  2: 2.4,\n  3: 2.5,\n  4: 2.1,\n  5: 2.9,\n  6: 3.6,\n  7: 1.6,\n  8: 0.6 \n}\n\n// Ingrediends of proven compounds to check for missing ones\nconst ingredientsCompounds = {\n  1: [1, 12, 8, 20],\n  2: [16, 18, 23, 20],\n  3: [25, 9, 4, 13, 14],\n  4: [22, 15, 12, 7],\n  5: [26, 5, 3, 28, 22],\n  6: [32, 2, 14, 24]\n};\n// Prices for pizza variations\ninterface SizeNames {\n  [k: string]: string\n}\nconst sizeNames:SizeNames = {\n  1: 'small',\n  2: 'medium',\n  3: 'large'\n}\ninterface SizePrizes {\n  [k: string]: number\n}\nconst sizePrizes:SizePrizes = {\n  1: 2.9,\n  2: 4.9,\n  3: 6.9\n}\n\ninterface NamesDough {\n  [k: string]: string\n}\nconst doughNames:NamesDough = {\n  1: 'wheat',\n  2: 'glutenfree',\n  3: 'spelt'\n}\ninterface PricesDough {\n  [k: string]: number\n}\nconst doughPrices:PricesDough = {\n  1: 0,\n  2: 3,\n  3: 0.5\n}\nconst prices = {\n  // base prices\n  size_normal: 4.9,\n  size_smaller: 2.9,\n  size_larger: 6.9,\n  // prices added to base\n  dough_dinkel: 0.5,\n  dough_glutenfree: 3.0,\n  type_chocolate: 0.6,\n  type_surprise: 1.6\n};\ninterface NamesIngredients {\n  [k: string]: string\n}\nconst namesIngredients:NamesIngredients = {\n  1: 'Garlic',\n  2: 'Zucchini',\n  3: 'Onion',\n  4: 'Chickpeas',\n  5: 'Sunflower Seeds',\n  6: 'Mushroom',\n  7: 'Bell Pepper',\n  8: 'Spinach',\n  9: 'Sesame Seeds',\n\n  10: 'Pineapple',\n  11: 'Broccoli',\n  12: 'Cherry Tomatoes',\n  13: 'Pumpkin Seeds',\n  14: 'Caramelized Onions',\n  15: 'Eggplant',\n  16: 'Banana',\n  17: 'Sweet Potato',\n  \n  18: 'Fresh Basil',\n  19: 'Caper',\n  20: 'Pepperoni',\n  21: 'Tahini',\n  \n  22: 'Ruccola',\n  23: 'Peanut Butter',\n  24: 'Cashew',\n  25: 'Avocado',\n  26: 'Smoked Tofu',\n  27: 'Chia Seeds',\n  28: 'Dried Figs',\n  29: 'Walnuts',\n\n  30: 'Black Olives',\n  31: 'Hemp Seeds',\n  32: 'Green Olives',\n  33: 'Vegan Salami',\n  34: 'Artichoke',\n  35: 'Dried Tomatoes',\n  36: 'Tempeh',\n  37: 'Pesto',\n  38: 'Seitan Gyros',\n};\n\ninterface Incredience {\n  [k: string]: number\n}\nconst pricesIngredients:Incredience = {\n  1: 0.4,\n  2: 0.4,\n  3: 0.4,\n  4: 0.4,\n  5: 0.4,\n  6: 0.4,\n  7: 0.4,\n  8: 0.4,\n  9: 0.4,\n\n  10: 0.5,\n  11: 0.5,\n  12: 0.5,\n  13: 0.5,\n  14: 0.5,\n  15: 0.5,\n  16: 0.5,\n  17: 0.5,\n\n  18: 0.6,\n  19: 0.6,\n  20: 0.6,\n  21: 0.6,\n\n  22: 0.7,\n  23: 0.7,\n  24: 0.7,\n  25: 0.7,\n  26: 0.7,\n  27: 0.7,\n  28: 0.7,\n  29: 0.7,\n\n  30: 1.0,\n  31: 1.0,\n  32: 1.0,\n  33: 1.0,\n  34: 1.5,\n  35: 1.5,\n  36: 1.5,\n  37: 1.5,\n  38: 1.5,\n};\nexport {pricesIngredients,namesIngredients, doughPrices, doughNames, sizeNames,sizePrizes,typeNames,typePrices, drinks};","import React from \"react\";\nimport {pricesIngredients,namesIngredients} from \"../../config/prices\";\n\ninterface TodoListItemProps {\n  incredience:Incredience\n}\nexport const IncredienceItem: React.FC<TodoListItemProps> = ({ incredience }) => {\n  return (\n    <span>\n      + { namesIngredients[incredience] } ({ pricesIngredients[incredience] } €) \n    </span>\n  );\n};\n","import React from \"react\";\n//import { Todo, ToggleComplete } from \"./types\";\nimport { IncredienceItem } from \"../ListItems/ListItemIncredience\";\n\n\ninterface IncrediencesListProps {\n  pizza:Pizza\n}\n\nconst IncrediencesList: React.FC<IncrediencesListProps> = ({pizza}) => {\n  return (\n    <div>&nbsp;\n      {pizza.incrediences.map((incredience, index) => (\n        <IncredienceItem key={index} incredience={incredience} />\n      ))}\n    </div>\n  );\n};\nexport default IncrediencesList;","const formatPrice = (price:number):string=>{\n  return price.toFixed(2)+' €';\n}\nconst calculateOrderTotal = (orderHistory:OrderHistory):number=>{\n  let total = 0;\n  orderHistory.map((order, index) => {\n    total += order.total;\n  });\n  return total;\n}\nexport {formatPrice,calculateOrderTotal}","import React from \"react\";\nimport {drinks} from \"../../config/prices\";\n\nimport {formatPrice} from \"../../Controllers/PriceController\";\n\ninterface IncrediencesListProps {\n  order:Order\n}\n\nconst ListPizzas: React.FC<IncrediencesListProps> = ({order}) => {\n  return (\n    <div>\n      <ul>\n      {order.foods.map((pizza, index) => (\n          <li key={index}>Pizza {formatPrice(pizza.price)}</li>\n      ))}\n      </ul>\n      <ul>\n        {order.drinks.map((drink, index) => (\n          <li key={index}>{drinks[drink.type].name} {formatPrice(drink.price)}</li>\n        ))}\n      </ul>\n        <p>Total: {formatPrice(order.total)}</p>\n    </div>\n  );\n};\nexport default ListPizzas;","import React from \"react\";\nimport {drinks} from \"../../config/prices\";\n\nimport {formatPrice,calculateOrderTotal} from \"../../Controllers/PriceController\";\n\ninterface IncrediencesListProps {\n  orderHistory:OrderHistory\n}\n\nconst ListPizzas: React.FC<IncrediencesListProps> = ({orderHistory}) => {\n  return (\n    <div className=\"mt-5\">\n      <p>Order History</p>\n      <ul>\n        {orderHistory.map((order, index) => (\n          <li key={index}>Order #{index+1}: {formatPrice(order.total)}</li>\n        ))}\n      </ul>\n      <p>\n        Total: {formatPrice(calculateOrderTotal(orderHistory))}\n      </p>\n    </div>\n  );\n};\nexport default ListPizzas;","\nimport React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport { Button } from 'reactstrap';\ninterface ClosePizzaButtonProps {\n  closePizza: AddTodo;\n}\n\nexport const ButtonClosePizza: React.FC<ClosePizzaButtonProps> = ({ closePizza }) => {\n  const [newTodo, setNewTodo] = useState<string>(\"\");\n\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    closePizza();\n  };\n\n  return (\n    <Button type=\"submit\" onClick={handleSubmit}>Close Pizza</Button>\n  );\n};","\nimport React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport { Button } from 'reactstrap';\n\ninterface CloseOrderButtonProps {\n  closeOrder: AddTodo;\n}\n\nexport const ButtonCloseOrder: React.FC<CloseOrderButtonProps> = ({ closeOrder }) => {\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    closeOrder();\n  };\n\n  return (\n    <Button type=\"submit\" onClick={handleSubmit} className=\"mt-5\">Close Order</Button>\n  );\n};","import React, { useState, ChangeEvent, FormEvent } from \"react\";\n\ninterface InputFieldProps {\n  incrediences: string,\n  changeIncrediences:ChangeIncrediences;\n}\n\nexport const InputIncrediences: React.FC<InputFieldProps> = ({ incrediences,changeIncrediences }) => {\n\n  //const [incrediences, setIncrediences] = useState<string>(\"\");\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    //setIncrediences(e.target.value);\n    changeIncrediences(e.target.value);\n  };\n\n  return (\n    <input type=\"text\" value={incrediences} onChange={handleChange} />\n  );\n};\n\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport {doughNames,doughPrices} from \"../../config/prices\";\n\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\n\ninterface InputDoughtProps {\n  pizza: Pizza,\n  changeDough: ChangeDough\n}\n\nexport const InputDough: React.FC<InputDoughtProps> = ({ pizza,changeDough }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    //setIncrediences(e.target.value);\n    changeDough(e.target.value); \n  };\n\n  return (\n    <div>\n    <form>\n      <ToggleButtonGroup type='radio' name='dough' defaultValue={'1'}>\n        <ToggleButton value={'1'} onChange={handleChange} >{doughNames[1]}</ToggleButton>\n        <ToggleButton value={'2'} onChange={handleChange} >{doughNames[2]}</ToggleButton>\n        <ToggleButton value={'3'} onChange={handleChange} >{doughNames[3]}</ToggleButton>\n      </ToggleButtonGroup>\n    </form>\n  </div>\n  );\n};\n/*\n      <input type=\"radio\" value=\"1\" name=\"dough\" checked={pizza.dough === 1} onChange={handleChange} /> {doughNames[1]}\n      <input type=\"radio\" value=\"2\" name=\"dough\" checked={pizza.dough === 2} onChange={handleChange} /> {doughNames[2]}\n      <input type=\"radio\" value=\"3\" name=\"dough\" checked={pizza.dough === 3} onChange={handleChange} /> {doughNames[3]}\n*/\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport {sizeNames, sizePrizes} from \"../../config/prices\";\n\ninterface InputSizetProps {\n  pizza: Pizza,\n  changeSize: ChangeSize\n}\n\nexport const InputSize: React.FC<InputSizetProps> = ({ pizza,changeSize }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    //setIncrediences(e.target.value);\n    changeSize(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <ToggleButtonGroup className=\"mt-1\" type='radio' name='size' defaultValue={'2'}>\n          <ToggleButton value={'1'} onChange={handleChange} >{sizeNames[1]}</ToggleButton>\n          <ToggleButton value={'2'} onChange={handleChange} >{sizeNames[2]}</ToggleButton>\n          <ToggleButton value={'3'} onChange={handleChange} >{sizeNames[3]}</ToggleButton>\n        </ToggleButtonGroup>\n      </form>\n    </div>\n  );\n}; \n\n\n\n\n      \n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport {typeNames, typePrices} from \"../../config/prices\";\n\ninterface InputTypeProps {\n  pizza: Pizza,\n  changeType: ChangeType\n}\n\nexport const InputType: React.FC<InputTypeProps> = ({ pizza,changeType }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    changeType(e.target.value);\n  };\n\n  return (\n    <div>\n      <form>\n        <ToggleButtonGroup type='radio' name='size' defaultValue={'0'} className=\"mt-1\">\n          <ToggleButton value={'0'} onChange={handleChange} >{typeNames[0]}</ToggleButton>\n          <ToggleButton value={'1'} onChange={handleChange} >{typeNames[1]}</ToggleButton>\n          <ToggleButton value={'2'} onChange={handleChange} >{typeNames[2]}</ToggleButton>\n          <ToggleButton value={'3'} onChange={handleChange} >{typeNames[3]}</ToggleButton>\n          <ToggleButton value={'4'} onChange={handleChange} >{typeNames[4]}</ToggleButton>\n          <ToggleButton value={'5'} onChange={handleChange} >{typeNames[5]}</ToggleButton>\n          <ToggleButton value={'6'} onChange={handleChange} >{typeNames[6]}</ToggleButton>\n          <ToggleButton value={'7'} onChange={handleChange} >{typeNames[7]}</ToggleButton>\n          <ToggleButton value={'8'} onChange={handleChange} >{typeNames[8]}</ToggleButton>\n        </ToggleButtonGroup>\n      </form>\n    </div>\n  );\n};\n\n\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport { Button } from 'reactstrap';\nimport {drinks} from \"../../config/prices\";\n\ninterface InputDrinksProps {\n  addDrinkToOrder: AddDrinkToOrder;\n}\n\nexport const InputDrinks: React.FC<InputDrinksProps> = ({addDrinkToOrder}) => {\n  \n  const handleClick = (i:number) => {\n    addDrinkToOrder(i);\n  };\n   \n\n  return (\n    <div>\n      {drinks.map((drink,index) => (\n        <Button key={index} onClick={() => handleClick(index)} value={index}>{drink.name}</Button>\n      ))}\n    </div>\n  );\n};","import React, { useState,useEffect } from 'react';\nimport { StyleSheet, Text, View, Image} from 'react-native';\n\n\nimport ListIncrediences  from \"./Components/Lists/ListIncredinences\";\nimport ListPizzas  from \"./Components/Lists/ListPizzas\";\nimport ListOrderHistory  from \"./Components/Lists/ListOrderHistory\";\n\nimport {ButtonClosePizza} from \"./Components/Buttons/ButtonClosePizza\";\nimport {ButtonCloseOrder} from \"./Components/Buttons/ButtonCloseOrder\";\n\nimport {InputIncrediences} from \"./Components/Inputs/InputIncrediences\";\nimport {InputDough} from \"./Components/Inputs/InputDough\";\nimport {InputSize} from \"./Components/Inputs/InputSize\";\nimport {InputType} from \"./Components/Inputs/InputType\";\nimport {InputDrinks} from \"./Components/Inputs/InputDrinks\";\n\nimport {formatPrice} from \"./Controllers/PriceController\";\nimport {pricesIngredients,sizePrizes,doughPrices,typePrices,drinks} from \"./config/prices\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/App.css';\n\nimport { Button } from 'reactstrap';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\n\nexport default function App() {\n  //VARIABLES\n  const plainPizza: Pizza = {dough:1,size:2,type:0,incrediences:[],price:0}\n  const plainOrder: Order = {foods:[],drinks:[],total:0}\n  \n  //STORE\n  const [incrediences, setIncrediences] = useState<string>(\"\");\n  const [orderHistory, setOrderHistory] = useState<OrderHistory>([]);\n/*\n  useEffect(() => {\n    console.log(orderHistory);\n  }, [orderHistory]);\n*/\n  const [order, setOrder] = useState<Order>(plainOrder);\n  useEffect(() => {\n    calcOrderPrice();\n  }, [order.foods,order.drinks]);\n\n  const [pizza, setPizza] = useState<Pizza>(plainPizza);\n  useEffect(() => {\n    calcPizzaPrice();\n  }, [pizza.incrediences,pizza.size,pizza.dough,pizza.type]);\n\n  //FUNCTIONS\n  const changeSize:ChangeSize=async(sizeInput)=>{\n    setPizza(prevState => ({ ...prevState, size:parseInt(sizeInput)}));\n  }\n  const changeType:ChangeSize=async(typeInput)=>{\n    setPizza(prevState => ({ ...prevState, type:parseInt(typeInput)}));\n  }\n  const changeDough:ChangeSize=async(doughInput)=>{\n    setPizza(prevState => ({ ...prevState, dough:parseInt(doughInput)}));\n  }\n  const changeIncrediences:ChangeIncrediences=async(incrediencesInput)=>{\n    setIncrediences(incrediencesInput);\n    let incrediences:Array<Incredience> = incrediencesInput.replace(/,+$/,'').split(\",\").map(Number);\n    setPizza(prevState => ({ ...prevState, incrediences:incrediences}));\n  } \n  const addDrinkToOrder = (drinkId:number):void=>{\n    const newOrder:Array<Drink> = [...order.drinks,{type:drinkId,price:drinks[drinkId].price}];\n    setOrder(prevState => ({ ...prevState, drinks:newOrder}));\n  }\n  const calcOrderPrice = ():void=>{\n    let total = 0;\n    order.drinks.map((drink)=>(\n      total+=drink.price\n    ))\n    order.foods.map((pizza)=>(\n      total+=pizza.price\n    ))\n    setOrder(prevState => ({ ...prevState, total:total}));\n  }\n  const calcPizzaPrice = ():void=>{\n    let total = sizePrizes[pizza.size] + doughPrices[pizza.dough]+typePrices[pizza.type];\n    pizza.incrediences.forEach(i=>{\n      if(pricesIngredients[i]){\n        total += pricesIngredients[i];\n      }\n    });    \n    setPizza(prevState => ({ ...prevState, price:total}));\n  }\n  const closePizza = ():void=>{\n    const newPizzas:Array<Pizza> = [...order.foods,pizza];\n    setOrder(prevState => ({ ...prevState, foods:newPizzas}));\n    setPizza(plainPizza);\n    setIncrediences(\"\");\n  }\n  const closeOrder = ():void=>{\n    setOrderHistory([...orderHistory,order]);\n    setOrder(plainOrder);\n    setPizza(plainPizza);\n    setIncrediences(\"\");\n  }\n  return (\n    <div className=\"appContainer container align-items-center\">    \n      <img\n        className=\"logo\"\n        src={require('./assets/img/logo.png')} \n      /> \n      <h3 className=\"h3 mb-3 font-weight-normal \">PizzaLabCalc</h3>\n      <InputDough changeDough={changeDough} pizza={pizza} />\n      <InputSize changeSize={changeSize} pizza={pizza} />\n      <InputType changeType={changeType} pizza={pizza} />\n      <ListIncrediences pizza={pizza} />\n\n      Extra Incrediences: <InputIncrediences incrediences={incrediences} changeIncrediences={changeIncrediences}/>\n      <div>\n        <Text>Total: {formatPrice(pizza.price)}</Text>\n      </div>\n      <div>\n        <ButtonClosePizza closePizza={closePizza}/>\n      </div>\n      <hr />\n      <ListPizzas order={order} />\n      <InputDrinks addDrinkToOrder={addDrinkToOrder} />\n      <ButtonCloseOrder closeOrder={closeOrder}/>\n      <ListOrderHistory orderHistory={orderHistory} />\n    </div>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import App from \"./src/App\";\nexport default App;","var api = require(\"!../../../../../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  background-color: #f5f5f5; \\n}\\n\\n\\n\\nhtml,\\n.appContainer {\\n  height: 100%;\\n}\\n\\n.form-signin {\\n  width: 100%;\\n  max-width: 330px;\\n  padding: 15px;\\n  margin: 0 auto;\\n}\\n.form-signin .checkbox {\\n  font-weight: 400;\\n}\\n.form-signin .form-control {\\n  position: relative;\\n  box-sizing: border-box;\\n  height: auto;\\n  padding: 10px;\\n  font-size: 16px;\\n}\\n.form-signin .form-control:focus {\\n  z-index: 2;\\n}\\n.form-signin input[type=\\\"email\\\"] {\\n  margin-bottom: -1px;\\n  border-bottom-right-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n.form-signin input[type=\\\"password\\\"] {\\n  margin-bottom: 10px;\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n}\\n.logo {\\n  width: 80px;\\n  height: 80px;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/logo.736facda.png\";"],"sourceRoot":""}